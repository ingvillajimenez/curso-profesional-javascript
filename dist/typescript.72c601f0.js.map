{"version":3,"sources":["ejercicios/typescript/index.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;AAE/B;AACA,IAAI,KAAK,GAAY,IAAI;AACzB,KAAK,GAAG,KAAK;AAEb;AACA,IAAI,GAAG,GAAG,CAAC;AACX,IAAI,SAAS,GAAW,EAAE;AAC1B,IAAI,WAAW,GAAW,GAAG;AAC7B,IAAI,SAAS,GAAG,SAAS,GAAG,WAAW;AAEvC;AACA,IAAI,MAAM,GAAW,SAAS;AAC9B,IAAI,MAAM,GAAG,WAAA,CAAA,MAAA,CAAY,MAAM,CAAE;AAEjC;AACA,IAAI,MAAM,GAAa,EAAE;AACzB,MAAM,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC;AACrC;AAEA,IAAI,gBAAgB,GAA2B,EAAE;AACjD,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC;AAChC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;AAE3B;AACA,IAAK,KAKJ;AALD,CAAA,UAAK,KAAK,EAAA;EACR,KAAA,CAAA,MAAA,CAAA,GAAA,MAAa;EACb,KAAA,CAAA,OAAA,CAAA,GAAA,OAAe;EACf,KAAA,CAAA,MAAA,CAAA,GAAA,MAAa;EACb,KAAA,CAAA,UAAA,CAAA,GAAA,UAAqB;AACvB,CAAC,EALI,KAAK,KAAL,KAAK,GAAA,CAAA,CAAA,CAAA,CAAA;AAOV,IAAI,aAAa,GAAU,KAAK,CAAC,QAAQ;AACzC,OAAO,CAAC,GAAG,CAAC,uBAAA,CAAA,MAAA,CAAwB,aAAa,CAAE,CAAC;AAEpD;AACA,IAAI,OAAO,GAAQ,OAAO;AAC1B,OAAO,GAAG;EAAE,IAAI,EAAE;AAAU,CAAE;AAE9B;AACA,IAAI,UAAU,GAAW;EAAE,IAAI,EAAE;AAAU,CAAE;AAE7C;AACA,SAAS,GAAG,CAAC,CAAS,EAAE,CAAS,EAAA;EAC/B,OAAO,CAAC,GAAG,CAAC;AACd;AAEA,IAAM,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAErB,SAAS,WAAW,CAAC,CAAS,EAAA;EAC5B,OAAO,UAAU,CAAS,EAAA;IACxB,OAAO,CAAC,GAAG,CAAC;EACd,CAAC;AACH;AAEA,IAAM,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC;AAC9B,IAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC;AAE5B;AACA;AACA;AAEA,SAAS,QAAQ,CAAC,SAAiB,EAAE,QAA0B,EAAA;EAA1B,IAAA,QAAA,KAAA,KAAA,CAAA,EAAA;IAAA,QAAA,GAAA,OAA0B;EAAA;EAC7D,OAAO,EAAA,CAAA,MAAA,CAAG,SAAS,EAAA,GAAA,CAAA,CAAA,MAAA,CAAI,QAAQ,CAAE;AACnC;AAEA,IAAM,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAClC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;AAUpB,IAAI,IAAI,GAAe;EACrB,KAAK,EAAE,CAAC;EACR,IAAI,EAAE;EACN;CACD;;AAED,SAAS,IAAI,CAAC,CAAa,EAAA;EACzB,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK;AACzB;AAEA,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;AAErB,IAAI,CAAC,QAAQ,GAAG,YAAA;EACd,OAAO,IAAI,CAAC,KAAK,GAAG,gBAAA,CAAA,MAAA,CAAiB,IAAI,CAAC,KAAK,CAAE,GAAG,eAAe;AACrE,CAAC;AAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC","file":"typescript.72c601f0.js","sourceRoot":"..","sourcesContent":["console.log(\"Hello TypeScript\");\n\n// Boolean\nlet muted: boolean = true;\nmuted = false;\n\n// Numeros\nlet age = 6;\nlet numerador: number = 42;\nlet denominador: number = age;\nlet resultado = numerador / denominador;\n\n// String\nlet nombre: string = \"Richard\";\nlet saludo = `Me llamo ${nombre}`;\n\n// Arreglos\nlet people: string[] = [];\npeople = [\"Isabel\", \"Nicole\", \"Raul\"];\n// people.push(\"9000\");\n\nlet peopleAndNumbers: Array<string | number> = [];\npeopleAndNumbers.push(\"Ricardo\");\npeopleAndNumbers.push(9001);\n\n// Enum\nenum Color {\n  Rojo = \"Rojo\",\n  Verde = \"Verde\",\n  Azul = \"Azul\",\n  Amarillo = \"Amarillo\",\n}\n\nlet colorFavorito: Color = Color.Amarillo;\nconsole.log(`Mi color favorito es ${colorFavorito}`);\n\n// Any\nlet comodin: any = \"Joker\";\ncomodin = { type: \"Wildcard\" };\n\n// Object\nlet someObject: object = { type: \"Wildcard\" };\n\n// Funciones\nfunction add(a: number, b: number): number {\n  return a + b;\n}\n\nconst sum = add(4, 6);\n\nfunction createAdder(a: number): (number) => number {\n  return function (b: number) {\n    return b + a;\n  };\n}\n\nconst addFour = createAdder(4);\nconst fourPlus6 = addFour(6);\n\n// function fullName(firstName: string, lastName?: string): string {\n//   return `${firstName} ${lastName}`;\n// }\n\nfunction fullName(firstName: string, lastName: string = \"Smith\"): string {\n  return `${firstName} ${lastName}`;\n}\n\nconst richard = fullName(\"Agente\");\nconsole.log(richard);\n\n// Interfaces\n\ninterface Rectangulo {\n  ancho: number;\n  alto: number;\n  color?: Color;\n}\n\nlet rect: Rectangulo = {\n  ancho: 4,\n  alto: 6,\n  // color: Color.Rojo,\n};\n\nfunction area(r: Rectangulo): number {\n  return r.alto * r.ancho;\n}\n\nconst areaRect = area(rect);\nconsole.log(areaRect);\n\nrect.toString = function () {\n  return this.color ? `Un rectangulo ${this.color}` : `Un rectangulo`;\n};\n\nconsole.log(rect.toString());\n"]}