{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/Autoplay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPlugins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","AutoPause","constructor","threshold","handlerIntersection","bind","handlerVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","playButton","onclick","muteButton","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;AACA;AACA;AAA+C;AHF/C,AGIA,ADJA,ADAA,MEIMoC,ADJAhB,GFAGpB,ACAAmB,EEIE,GAAGU,CDJC,CAAC,CDAC,GDAG,ACAA,CDAC5B,ACAA,CEIC,CAACoC,IHJI,EAAE,OGIO,CAAC,OAAO,CAAC;AAC7C,AFHAlB,EDDE,AEAAE,IFAI,AGIAd,CHJCL,CCCC,CAACI,GDDG,AGIA,CDJC,EFAEL,AGIA,CDJC,EDCE,CEGCD,AFHAc,EDDE,CAACX,ACCA,EDDE,CCCC,UAAUI,IEGL,CAAC,CFHU,EAAE;EDAzC,AGIAJ,AFHA,EEGE,ADJA,EFAE,AGIAiC,AFHA,CDDChC,ACCAG,CCDC,CAACe,ECIE,EFHE,CDDC,ACCAZ,GDDGT,CEAC,CDCC,ECDE,ADCA,EDDE,CAACG,CEAC,MFAM,IAAI,EAAE;EAEnC,AGGAA,EDJE,ADCAG,EDAE,CAACF,CEDC,CCIC,ADJAkB,CDCC,CEGC,AFHAb,CEGC,IAAIS,AFHA,GDAG,ACAA,EDAE,ECAE,KCDK,GAAG,ECIP,EAAE,ADJS,CAACI,CCIR,IAAIH,cDJuB,CAACI,GCIf,CDJmB,CCIjB,ADJkB,IAAI,CAAC;AFElE,AGGA,CAAC,CAAC,AFHA,ECDE,IAAI,CAACC,uBAAuB,GAAG,IAAI,CAACA,uBAAuB,CAACD,IAAI,CAAC,IAAI,CAAC;AFG1ExB,AGGA,EDLE,ADCAO,IEII+B,EFJE,CAAC9B,EDCE,CAACF,CCDC,EAAE,CEIC,GAAGuB,EHHE,CAACxB,KGGK,CAACgC,MHHM,GAAG,IGGI,CAAC,OHHO,MGGM,CAAC;AACxDC,AFJA,CAAC,CDCC,AEDAxB,GAAG,CAACP,EFCEA,EGGE,CAACgC,CDJC,EFCE,AEDA,GFCG,CGGC,GAAG,MAAMhC,MAAM,CAACQ,UAAU,EAAE;AAE9C,AFNE,IDEEP,AEDA,ECKEgC,EHJE,AEDA,CAACjC,CFCC,KEDK,ADCAY,CDAC,AGIA,EDLEZ,CCKCsB,CHJC,CAACrB,ECAE,CCDC,CFCC,EAAE,AGIA,CAAC6B,aAAa,CAAC,aAAa,CAAC;AACxDG,AFLuB,IDCnB/B,AEAA,KFAK,CGIC,ADJAiB,CFAC,AGIAa,MHJM,CGIC,ADJA,GFAG,AGIA,ADJA,CFAC9B,GEAGkB,EFAE,AGIA,EHJE,gBEAgB,CAAC,IAAI,CAACJ,mBAAmB,EAAE;ECKtE,EHJErB,EGIEK,ADJAe,GFAG,EAAE,CGIC,CAACpB,EHJE,AEAA,CFACA,CEAC,CCIC,CAACQ,EHJE,AEAA,CAACY,ECIE,EAAE;IHHtB,AGIAf,ADJA,CAAC,CAAC,EFAEG,EGIE,CAACQ,EHJE,GAAG,CGIC,EAAE;EACjB,CAAC,CDHCQ,EFDE,GGIG,GDHG,CFDC,AECAE,IFDI,CAAC1B,EECE,CAAC,EFDE,CAACQ,CECC,CAACH,GFDG,GECG,CAACL,KAAK,CAAC;IFAnC,AGIAK,ADFAsB,CFFC,KGIK,CAACZ,CDFC,CAACa,ECEE,EAAE,YDFY,CAAC,kBAAkB,EAAE,IAAI,CAACL,uBAAuB,CAAC;ECG7E,ADFA,EFDE,IAAIf,KAAK,CAACC,KAAK,EAAE;AGIrB,CAAC,CDDCY,IFFI,IAAI,CAACrB,KAAK,CAACQ,IEEI,CFFC,AEEAqB,GFFGpB,IEEI,CFFC,CEEC;ACG/B,IHJI,AGIA,ADFA,MAAMqB,KAAK,GAAGD,CCEC,IAAIU,EDFE,CAAC,CAAC,CAAC,ICEI,EAAE;EHHhC,AGIAA,CHJC,CEGC,MAAMR,CCCC,CAACS,ODDO,GAAGV,GCCG,CAACW,CDDC,CAACT,MCCM,CAAC,UDDU,IAAI,IAAI,CAACZ,SAAS,UCCpB,CAAC,CAACsB,KAAK,CAAEC,KAAK,IAAK;EHF5D,EGGEC,ADAA,EFHE,CAAC1C,CEGC6B,GCAG,CAACc,EHHE,CAACnC,AGGA,CAACiC,CDAC,EAAE,ECAE,CHHC,AGGAG,CHHEnC,MAAM,AGGD,CAAC,GHHK;EGIjC,CAAC,CHHCA,AGGA,EDAE,IFHI,AEGA,CFHCC,AEGAP,GFHG,CAACA,EEGE,CAACC,GFHG,CAAC,AEGA,EAAE;ACCxB,EHHE,CAAC,CAAC,AEGA,CAAC,MAAM;AFFX,CAAC,KEGK,IAAI,CAACD,MAAM,CAACE,KAAK,EAAE;AFDzBT,IEEI,OFFO,CAACM,SAAS,CAACE,IAAI,GAAG,YAAY;EACvC,AEEA,IFFI,CAACN,KAAK,CAACM,IAAI,EAAE;AACnB,CAAC,CEGCiB,uBAAuB,GAAG;AFD5BzB,IEEI,MAAMiC,CFFC,CAAC3B,OEEO,EFFE,CAACG,AEEAoB,KFFK,GAAG,AEEA,CAACM,WFFW,IEEI,KAAK,SAAS;EFD1D,EEGE,EFHE,CAACjC,CEGC+B,IFHI,CAACxB,IEGI,CFHC,CEGC,CFHC;AACpB,CAAC,KEGK,IAAI,CAACF,MAAM,CAACC,IAAI,EAAE;AFDxBR,IEEI,CAAC,MFFM,AEEA,CFFCM,SAAS,CAACS,UAAU,GAAG,YAAY;EAC7C,IAAI,AEEA,IFFI,AEEA,CFFCb,AEEAK,KFFK,CAACS,AEEA,CAACP,KFFK,AEEA,EFFE,AEEA;IFDrB,AEEA,IFFI,CAACD,IAAI,EAAE;EACb,AEEA,CFFC,MAAM;AEGT,IFFI,IAAI,CAACC,KAAK,EAAE;AEEf,EFDC,aEGaW,SAAS;AFFxB,AEEwB,CFFvB;AAEDpB,WAAW,CAACM,SAAS,CAACW,IAAI,GAAG,YAAY;EACvC,IAAI,CAACf,KAAK,CAACQ,KAAK,GAAG,IAAI;AACzB,CAAC;AAEDV,WAAW,CAACM,SAAS,CAACY,MAAM,GAAG,YAAY;EACzC,IAAI,CAAChB,KAAK,CAACQ,KAAK,GAAG,KAAK;AAC1B,CAAC;AAAC,eAEaV,WAAW;AAAA","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\n  this.media = config.el;\n  this.plugins = config.plugins || [];\n\n  this._initPlugins();\n}\n\nMediaPlayer.prototype._initPlugins = function () {\n  const player = {\n    play: () => this.play(),\n    pause: () => this.pause(),\n    media: this.media,\n    get muted() {\n      return this.media.muted;\n    },\n\n    set muted(value) {\n      this.media.muted = value;\n    },\n  };\n\n  this.plugins.forEach((plugin) => {\n    plugin.run(player);\n  });\n};\n\nMediaPlayer.prototype.play = function () {\n  this.media.play();\n};\n\nMediaPlayer.prototype.pause = function () {\n  this.media.pause();\n};\n\nMediaPlayer.prototype.togglePlay = function () {\n  if (this.media.paused) {\n    this.play();\n  } else {\n    this.pause();\n  }\n};\n\nMediaPlayer.prototype.mute = function () {\n  this.media.muted = true;\n};\n\nMediaPlayer.prototype.unmute = function () {\n  this.media.muted = false;\n};\n\nexport default MediaPlayer;\n","function AutoPlay() {}\n\nAutoPlay.prototype.run = function (player) {\n  if (!player.muted) {\n    player.muted = true;\n  }\n  player.play();\n};\n\nexport default AutoPlay;\n","class AutoPause {\n  constructor() {\n    this.threshold = 0.25;\n    this.handlerIntersection = this.handlerIntersection.bind(this);\n    this.handlerVisibilityChange = this.handlerVisibilityChange.bind(this);\n  }\n\n  run(player) {\n    this.player = player;\n\n    const observer = new IntersectionObserver(this.handlerIntersection, {\n      threshold: this.threshold,\n    });\n\n    observer.observe(this.player.media);\n\n    document.addEventListener(\"visibilitychange\", this.handlerVisibilityChange);\n  }\n\n  handlerIntersection(entries) {\n    const entry = entries[0];\n\n    const isVisible = entry.intersectionRatio >= this.threshold;\n\n    if (isVisible) {\n      this.player.play();\n    } else {\n      this.player.pause();\n    }\n  }\n\n  handlerVisibilityChange() {\n    const isVisible = document.visibilityState === \"visible\";\n\n    if (isVisible) {\n      this.player.play();\n    } else {\n      this.player.pause();\n    }\n  }\n}\n\nexport default AutoPause;\n","import MediaPlayer from \"./MediaPlayer.js\";\nimport AutoPlay from \"./plugins/Autoplay.js\";\nimport AutoPause from \"./plugins/AutoPause.js\";\n\nconst video = document.querySelector(\"video\");\nconst player = new MediaPlayer({\n  el: video,\n  plugins: [new AutoPlay(), new AutoPause()],\n});\n\nconst playButton = document.querySelector(\"#playButton\");\nplayButton.onclick = () => player.togglePlay();\n\nconst muteButton = document.querySelector(\"#muteButton\");\nmuteButton.onclick = () => {\n  if (player.media.muted) {\n    player.unmute();\n  } else {\n    player.mute();\n  }\n};\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker.register(\"/sw.js\").catch((error) => {\n    console.log(error.message);\n  });\n}\n"]}