{"id":"ejercicios/prototypal-inheritance.html","dependencies":[{"name":"/Users/juan/code/platzi/curso-profesional-javascript/package.json","includedInParent":true,"mtime":1672010962668}],"generated":{"html":"<html>\n  <head>\n    <title>Herencia Prototipal</title>\n  </head>\n\n  <body>\n    <a href=\"/ejercicios/\">Go back</a>\n    <p><em>Abre la consola</em></p>\n\n    <h1>\n      <code>SomeObject.prototype</code> es un objeto donde definimos el\n      prototipo de las instancias de <code>SomeObject</code>. Es decir, las\n      instancias de <code>SomeObject</code> van a \"heredar\" de\n      <code>SomeObject.prototype</code>.\n      <br>\n      <br>\n      <code>SomeObject.[[Prototype]]</code> es el prototipo de\n      <code>SomeObject</code>. Es decir, <code>SomeObject</code> \"hereda\" de\n      <code>SomeObject.prototype</code>.\n    </h1>\n\n    <script>function Hero(name) {\n  this.name = name;\n}\nHero.prototype.saludar = function () {\n  console.log(`Hola, soy ${this.name}.`);\n};\nconst zelda = new Hero(\"Zelda\");\n\n// propiedades de la instancia\nconsole.log(\"Name: \", zelda.name);\n\n// propiedades de la \"clase\"\nconsole.log(\"Saludar: \", zelda.saludar);\n\n// propiedades heredadas ej: toString\nconsole.log(\"toString: \", zelda.toString);\n\n// hasOwnProperty (de donde sale toString o esto?)\nconsole.log('zelda.hasOwnProperty(\"saludar\"): ', zelda.hasOwnProperty(\"saludar\"));\n\n// inspeccionemos el prototipo del zelda\n// inspeccionemos el prototipo del Hero\n// inspeccionemos el prototipo del Object</script>\n  </body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"25a6d2af18d612b78b0f054238cf0d7e","cacheData":{"env":{}}}